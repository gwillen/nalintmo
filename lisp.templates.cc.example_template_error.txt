lisp.templates.cc: In instantiation of ‘do_apply_internal<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Sym<((const char*)((char*)(& num)))>, Nil> >, Cons<Cons<Sym<((const char*)((char*)(& cond)))>, Cons<Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<0>, Nil> > >, Cons<Int<1>, Nil> >, Cons<Cons<True, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<1>, Nil> > >, Nil> >, Nil> > >, Nil> >, Nil> > >, Nil> >, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’:
lisp.templates.cc:505:   instantiated from ‘eval<Cons<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Sym<((const char*)((char*)(& num)))>, Nil> >, Cons<Cons<Sym<((const char*)((char*)(& cond)))>, Cons<Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<0>, Nil> > >, Cons<Int<1>, Nil> >, Cons<Cons<True, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<1>, Nil> > >, Nil> >, Nil> > >, Nil> >, Nil> > >, Nil> > >, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:206:   instantiated from ‘do_progn<Cons<Cons<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Sym<((const char*)((char*)(& num)))>, Nil> >, Cons<Cons<Sym<((const char*)((char*)(& cond)))>, Cons<Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<0>, Nil> > >, Cons<Int<1>, Nil> >, Cons<Cons<True, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<1>, Nil> > >, Nil> >, Nil> > >, Nil> >, Nil> > >, Nil> > >, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Int<5>, Nil> >, Nil> >, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:473:   instantiated from ‘eval<Cons<Sym<((const char*)((char*)(& progn)))>, Cons<Cons<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Sym<((const char*)((char*)(& num)))>, Nil> >, Cons<Cons<Sym<((const char*)((char*)(& cond)))>, Cons<Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<0>, Nil> > >, Cons<Int<1>, Nil> >, Cons<Cons<True, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Cons<Sym<((const char*)((char*)(& num)))>, Cons<Int<1>, Nil> > >, Nil> >, Nil> > >, Nil> >, Nil> > >, Nil> > >, Cons<Cons<Sym<((const char*)((char*)(& fact)))>, Cons<Int<5>, Nil> >, Nil> > >, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:575:   instantiated from here
lisp.templates.cc:425: error: no type named ‘r_val’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:426: error: no type named ‘r_env’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:427: error: no type named ‘r_heap’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:429: error: no type named ‘r_env’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:430: error: no type named ‘r_env’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:431: error: no type named ‘r_env’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:432: error: no type named ‘r_env’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:434: error: no type named ‘r_val’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:435: error: no type named ‘r_val’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:435: error: no type named ‘r_val’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc:435: error: no type named ‘r_val’ in ‘struct eval<Sym<((const char*)((char*)(& define)))>, Cons<Cons<Sym<((const char*)((char*)(& cons)))>, Gensym<6> >, Cons<Cons<Sym<((const char*)((char*)(& times)))>, Gensym<5> >, Cons<Cons<Sym<((const char*)((char*)(& minus)))>, Gensym<4> >, Cons<Cons<Sym<((const char*)((char*)(& plus)))>, Gensym<3> >, Cons<Cons<Sym<((const char*)((char*)(& eq)))>, Gensym<2> >, Cons<Cons<Sym<((const char*)((char*)(& cdr)))>, Gensym<1> >, Cons<Cons<Sym<((const char*)((char*)(& car)))>, Gensym<0> >, Nil> > > > > > >, Cons<Cons<Gensym<6>, Prim<((const char*)((char*)(& cons)))> >, Cons<Cons<Gensym<5>, Prim<((const char*)((char*)(& times)))> >, Cons<Cons<Gensym<4>, Prim<((const char*)((char*)(& minus)))> >, Cons<Cons<Gensym<3>, Prim<((const char*)((char*)(& plus)))> >, Cons<Cons<Gensym<2>, Prim<((const char*)((char*)(& eq)))> >, Cons<Cons<Gensym<1>, Prim<((const char*)((char*)(& cdr)))> >, Cons<Cons<Gensym<0>, Prim<((const char*)((char*)(& car)))> >, Nil> > > > > > >, 7>’
lisp.templates.cc: In function ‘int main()’:
lisp.templates.cc:575: error: invalid use of qualified-name ‘::pretty’
